---
- import_tasks: include-vars.yml

- import_tasks: install-with-package.yml
  when: not certbot_install_from_source|bool

- import_tasks: install-from-source.yml
  when: certbot_install_from_source|bool

- name: set servicename apache2
  set_fact:
    servicename_webserver: apache2
  when:
  - ansible_os_family == "Debian"
  - certbot_create_method == "apache"

- name: set servicename httpd
  set_fact:
    servicename_webserver: httpd
  when:
  - ansible_os_family == "RedHat"
  - certbot_create_method == "apache"

- name: set servicename nginx
  set_fact:
    servicename_webserver: nginx
  when:
  - certbot_create_method == "nginx"

- import_tasks: permissions-for-ssl-cert-group.yml
  when:
  - certbot_ssl_read_group is defined
  - certbot_ssl_read_group|length>0

- name: set certbot_create_command for standalone mode
  set_fact:
    certbot_create_command: "{{ certbot_script }} certonly --no-bootstrap --standalone --noninteractive --agree-tos --email {{ cert_item.email | default(certbot_admin_email) }} -d {{ cert_item.domains | join(',') }}"
  when:
    certbot_create_method == "standalone"
  with_items: "{{ certbot_certs }}"
  loop_control:
    loop_var: cert_item

- name: set certbot_create_command for apache mode
  set_fact:
    certbot_create_command: "{{ certbot_script }} certonly --apache --noninteractive --agree-tos --email {{ cert_item.email | default(certbot_admin_email) }} -d {{ cert_item.domains | join(',') }}"
  when:
    certbot_create_method == "apache"
  with_items: "{{ certbot_certs }}"
  loop_control:
    loop_var: cert_item

- name: set certbot_create_command for nginx mode
  set_fact:
    certbot_create_command: "{{ certbot_script }} certonly --nginx --noninteractive --agree-tos --email {{ cert_item.email | default(certbot_admin_email) }} -d {{ cert_item.domains | join(',') }}"
  when:
    certbot_create_method == "nginx"
  with_items: "{{ certbot_certs }}"
  loop_control:
    loop_var: cert_item

- include_tasks: create-cert-standalone.yml
  with_items: "{{ certbot_certs }}"
  when:
    - certbot_create_if_missing|bool
    - certbot_create_method == 'standalone'
  loop_control:
    loop_var: cert_item

- include_tasks: create-cert-apache.yml
  with_items: "{{ certbot_certs }}"
  when:
    - certbot_create_if_missing|bool
    - certbot_create_method == 'apache'
  loop_control:
    loop_var: cert_item

- include_tasks: create-cert-nginx.yml
  with_items: "{{ certbot_certs }}"
  when:
    - certbot_create_if_missing|bool
    - certbot_create_method == 'nginx'
  loop_control:
    loop_var: cert_item

- import_tasks: renew-cron.yml
  when: certbot_auto_renew|bool
